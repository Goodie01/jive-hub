/*
 * This file is generated by jOOQ.
 */
package nz.jive.hub.database.generated.tables.records;


import java.time.OffsetDateTime;

import nz.jive.hub.database.generated.tables.Organisation;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class OrganisationRecord extends UpdatableRecordImpl<OrganisationRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.organisation.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.organisation.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.organisation.display_name</code>.
     */
    public void setDisplayName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.organisation.display_name</code>.
     */
    public String getDisplayName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.organisation.created_date</code>.
     */
    public void setCreatedDate(OffsetDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.organisation.created_date</code>.
     */
    public OffsetDateTime getCreatedDate() {
        return (OffsetDateTime) get(2);
    }

    /**
     * Setter for <code>public.organisation.last_updated_date</code>.
     */
    public void setLastUpdatedDate(OffsetDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.organisation.last_updated_date</code>.
     */
    public OffsetDateTime getLastUpdatedDate() {
        return (OffsetDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OrganisationRecord
     */
    public OrganisationRecord() {
        super(Organisation.ORGANISATION);
    }

    /**
     * Create a detached, initialised OrganisationRecord
     */
    public OrganisationRecord(Integer id, String displayName, OffsetDateTime createdDate, OffsetDateTime lastUpdatedDate) {
        super(Organisation.ORGANISATION);

        setId(id);
        setDisplayName(displayName);
        setCreatedDate(createdDate);
        setLastUpdatedDate(lastUpdatedDate);
        resetChangedOnNotNull();
    }
}
